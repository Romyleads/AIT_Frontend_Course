/*
–ó–∞–¥–∞–Ω–∏–µ 1
–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª –≤ —Ä–∞–∑–¥–µ–ª–µ "–¢–µ–æ—Ä–∏—è".
–°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ validate, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –æ–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–±–ª–æ–Ω—É:
–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–¥–Ω–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ (a‚Äìz);
–∑–∞—Ç–µ–º –∏–¥—ë—Ç —á–∏—Å–ª–æ 19;
–¥–∞–ª–µ–µ ‚Äî –¥–≤–µ –ª—é–±—ã–µ —Ü–∏—Ñ—Ä—ã (00‚Äì99);
—Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ **–∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ "born"`.
üß™ –ü—Ä–∏–º–µ—Ä—ã:
validate("c1986born"); // true
validate("b1988born"); // true
validate("1986born"); // false ‚Äî –Ω–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π –±—É–∫–≤—ã
validate("c1886born"); // false ‚Äî –Ω–µ 19XX
validate("c1986bor"); // false ‚Äî –Ω–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 'born'
Copy
‚úÇÔ∏è –ó–∞–¥–∞–Ω–∏–µ 2 : –ó–∞–º–µ–Ω–∞ —Å–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ–∫–µ
üéØ –¶–µ–ª—å:
–ù–∞—É—á–∏—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å string.replace() —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Ñ–ª–∞–≥–∞–º–∏ g –∏ i.

üìò –£—Å–ª–æ–≤–∏–µ:
–£ –≤–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞:

const sentence = "JavaScript is great. I love javascript. JAVASCRIPT is everywhere!";
Copy
–ó–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å–ª–æ–≤–∞ "javascript", –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞, –Ω–∞ —Å–ª–æ–≤–æ "TypeScript".

üîç –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
"TypeScript is great. I love TypeScript. TypeScript is everywhere!"
*/


console.log("Task 1. str = b1988born");
const str = "b1988born";
let regex = /^[a-z]19\d{2}born$/;

function validate(str){
return str.match(regex) !== null;
}

console.log("validate(b1988born): " + validate(str));


console.log("\nTask 2. sentence = JavaScript is great. I love javascript. JAVASCRIPT is everywhere!");

const sentence = "JavaScript is great. I love javascript. JAVASCRIPT is everywhere!";

regex = /javascript/gi;
replace = "TypeScript";

const result = sentence.replace(regex, replace);

console.log("string.replace(): " + result);